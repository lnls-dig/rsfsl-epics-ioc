#---------------------------------------------------------------------
# Title      : Rohde & Schwarz FSL Spectrum Analyzer Epics Protocol File
# Project    :
#---------------------------------------------------------------------
# File       : rsfsl.proto
# Author     : Leticia Garcez Capovilla
# Company    : Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
# Created    : 2018-03-19
# Last update: 2019-02-04
#---------------------------------------------------------------------
# Description:
#
# Defines protocol to use the device as a StreamDevice IOC in EPICS
#
#---------------------------------------------------------------------
# Copyright (c) 2018 Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
#
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program. If not, see
# <http://www.gnu.org/licenses/>.
#---------------------------------------------------------------------
# Revisions  :
# Date        	Version  	Author          	Description
# 2018-mar-19	1.0      	leticiagcapovilla       Created
# 2019-feb-04	2.0		leticiagcapovilla	Updated
#---------------------------------------------------------------------

######################################################################
#
# Variable declaration
#
GLOBAL_TIMEOUT = 5000;

######################################################################
#
# Communication setup
#
OutTerminator = CR LF;
InTerminator = LF;
ExtraInput = Ignore;
MaxInput = 576018;
WriteTimeout = ${GLOBAL_TIMEOUT};
ReadTimeout = ${GLOBAL_TIMEOUT};
ReplyTimeout = ${GLOBAL_TIMEOUT};
Separator = ",";

######################################################################
# Select Filter Type

inFiltType {
    out "SENS:BWID:RES:TYPE?";
    in "%s";
}

outFiltType {
    out "SENS:BWID:RES:TYPE %{NORM|FFT|CFIL|RRC|PULS}";
}

######################################################################
# Enable/Disable spectrogram measurement (SPECM, option K14)

inEnblSpec {
    out "CALC:SPEC:STAT?";
    in "%i";
}

outEnblSpec {
    out "CALC:SPEC:STAT %{OFF|ON}";
}

######################################################################
# Enable/Disable delete of previous measurement

inEnblDelMeas {
    out "CALC:SPEC:CONT?";
    in "%i";
}

outEnblDelMeas {
    out "CALC:SPEC:CONT %{OFF|ON}";
}

######################################################################
# Number of frames recorded (SPECM, Opt. K14)

inSpecFrameCount {
    out "CALC:SPEC:FRAM:COUN?";
    in "%f";
}

outSpecFrameCount {
    out "CALC:SPEC:FRAM:COUN %f";
}

######################################################################
# Frame selection (SPECM, Opt. K14)

inSpecFrame {
    out "CALC:SPEC:FRAM:SEL?";
    in "%f";
}

outSpecFrame {
    out "CALC:SPEC:FRAM:SEL %f";
}

######################################################################
# History Depth

inSpecBuffSize {
    out "CALC:SPEC:HDEP?";
    in "%f";
}

outSpecBuffSize {
    out "CALC:SPEC:HDEP %f";
}

######################################################################
# Clean spectrogram and history buffer

cmdCleanSpec {
    out "CALC:SPEC:CLE:IMM";
}

