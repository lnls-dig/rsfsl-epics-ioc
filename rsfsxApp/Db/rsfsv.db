#---------------------------------------------------------------------
# Title      : Rohde & Schwarz FSL Spectrum Analyzer Epics Database File
# Project    :
#---------------------------------------------------------------------
# File       : rsfsv.db
# Author     : Leticia Garcez Capovilla
# Company    : Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
# Created    : 2018-03-19
# Last update: 2019-02-04
#---------------------------------------------------------------------
# Description:
#
# Defines database to use the device in EPICS
#
#---------------------------------------------------------------------
# Copyright (c) 2018 Brazilian Synchrotron Light Laboratory, LNLS/CNPEM
#
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program. If not, see
# <http://www.gnu.org/licenses/>.
#---------------------------------------------------------------------
# Revisions  :
# Date        	Version  	Author         		Description
# 2018-mar-19 	1.0      	leticiagcapovilla       Created
# 2019-feb-04	2.0		leticiagcapovilla	Updated
#---------------------------------------------------------------------

# Auto Adjust Frequency Scale

record(bo, "$(P)$(R)AutoFreq-Cmd") {
  field(DESC, "Auto adjust center frequency")
  field(PINI, "YES")
  field(DTYP, "stream")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(OUT, "@rsfsv.proto outAutoFreq($1) $(PORT)")
}

# Auto Adjust Reference Level

record(bo, "$(P)$(R)AutoLvl-Cmd") {
  field(DESC, "Auto adjust reference level")
  field(PINI, "YES")
  field(DTYP, "stream")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(OUT, "@rsfsv.proto outAutoLvl($1) $(PORT)")
}

# Auto Adjust Frequency and Reference Level

record(bo, "$(P)$(R)AutoAll-Cmd") {
  field(DESC, "Auto adjust freq. and reference level")
  field(PINI, "YES")
  field(DTYP, "stream")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(HIGH, "1")
  field(OUT, "@rsfsv.proto outAutoAll($1) $(PORT)")
}

# Select Filter Type

record(mbbi, "$(P)$(R)FiltType-Sts") {
  field(DESC, "Get Filter Type")
  field(DTYP, "stream")
  field(ZRST, "NORM")
  field(ZRVL, "0")
  field(ONST, "CFIL")
  field(ONVL, "1")
  field(TWST, "RRC")
  field(TWVL, "2")
  field(THST, "P5")
  field(THVL, "3")
  field(INP, "@rsfsv.proto inFiltType $(PORT)")
}

record(mbbo, "$(P)$(R)FiltType-Sel") {
  field(DESC, "Set Filter Type")
  field(PINI, "YES")
  field(DTYP, "stream")
  field(ZRST, "NORM")
  field(ZRVL, "0")
  field(ONST, "CFIL")
  field(ONVL, "1")
  field(TWST, "RRC")
  field(TWVL, "2")
  field(THST, "P5")
  field(THVL, "3")
  field(OUT, "@rsfsv.proto outFiltType($1) $(PORT)")
  field(FLNK, "$(P)$(R)FiltType-Sts")
}

# Video Bandwidth

record(mbbi, "$(P)$(R)Vbw-Sts") {
  field(DESC, "Get Video Bandwidth")
  field(DTYP, "stream")
  field(ZRST, "1 Hz")
  field(ZRVL, "1")
  field(ONST, "3 Hz")
  field(ONVL, "3")
  field(TWST, "10 Hz")
  field(TWVL, "10")
  field(THST, "30 Hz")
  field(THVL, "30")
  field(FRST, "100 Hz")
  field(FRVL, "100")
  field(FVST, "300 Hz")
  field(FVVL, "300")
  field(SXST, "1 kHz")
  field(SXVL, "1000")
  field(SVST, "3 kHz")
  field(SVVL, "3000")
  field(EIST, "10 kHz")
  field(EIVL, "10000")
  field(NIST, "30 kHz")
  field(NIVL, "30000")
  field(TEST, "100 kHz")
  field(TEVL, "100000")
  field(ELST, "300 kHz")
  field(ELVL, "300000")
  field(TVST, "1 MHz")
  field(TVVL, "1000000")
  field(TTST, "3 MHz")
  field(TTVL, "3000000")
  field(FTST, "10 MHz")
  field(FTVL, "10000000")
  field(INP, "@rsfsx.proto inVbw $(PORT)")
  field(FLNK, "$(P)$(R)SweTime-Mon")
}

record(mbbo, "$(P)$(R)Vbw-Sel") {
  field(DESC, "Set Video Bandwidth")
  field(PINI, "YES")
  field(DTYP, "stream")
  field(SDIS, "$(P)$(R)EnblVbwAuto-Sts")
  field(DISV, "1")
  field(ZRST, "1 Hz")
  field(ZRVL, "1")
  field(ONST, "3 Hz")
  field(ONVL, "3")
  field(TWST, "10 Hz")
  field(TWVL, "10")
  field(THST, "30 Hz")
  field(THVL, "30")
  field(FRST, "100 Hz")
  field(FRVL, "100")
  field(FVST, "300 Hz")
  field(FVVL, "300")
  field(SXST, "1 kHz")
  field(SXVL, "1000")
  field(SVST, "3 kHz")
  field(SVVL, "3000")
  field(EIST, "10 kHz")
  field(EIVL, "10000")
  field(NIST, "30 kHz")
  field(NIVL, "30000")
  field(TEST, "100 kHz")
  field(TEVL, "100000")
  field(ELST, "300 kHz")
  field(ELVL, "300000")
  field(TVST, "1 MHz")
  field(TVVL, "1000000")
  field(TTST, "3 MHz")
  field(TTVL, "3000000")
  field(FTST, "10 MHz")
  field(FTVL, "10000000")
  field(OUT, "@rsfsx.proto outVbw($1) $(PORT)")
  field(FLNK, "$(P)$(R)Vbw-Sts")
}

